package org.github.naveenerroju.products_service.entity;

import org.bson.types.ObjectId;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;

import java.time.Instant;
import java.util.Date;
import java.util.List;

/**
 * The primary key of the document, automatically generated by MongoDB as an ObjectId.
 *
 * <p>Reason for using ObjectId instead of a UUID or sequential ID:
 * <ul>
 *   <li><strong>Performance:</strong> ObjectId is time-based and inserts are append-only,
 *       leading to better write performance and less index fragmentation.</li>
 *   <li><strong>Efficient Pagination & Sorting:</strong> ObjectIds are naturally ordered
 *       by creation time, making range queries, cursor-based pagination, and sorting efficient.</li>
 *   <li><strong>Scalability:</strong> No coordination or central sequencing logic is needed,
 *       making it suitable for distributed systems or high-traffic applications.</li>
 *   <li><strong>Storage Efficiency:</strong> ObjectId (12 bytes) is smaller than UUID (16 bytes),
 *       resulting in smaller indexes and reduced memory footprint.</li>
 *   <li><strong>MongoDB Native:</strong> MongoDB optimizes access and indexing around ObjectId as the default `_id` type.</li>
 * </ul>
 *
 * <p>In case an external UUID is required (e.g., for business use cases or data exchange),
 * it should be stored in a separate field and indexed independently.
 */
@Document(collection = "products")
public class Products {

    @Id
    private ObjectId id;

    private String name;
    private String slug;
    private String description;
    private String brand;

    @Field("category_id")
    private String categoryId;

    @Field("seller_id")
    private String sellerId;

    private List<String> images;
    private List<String> tags;

    @Field("base_price")
    private Double basePrice;

    private Integer stock;

    private FlashSales flashSale;

    private Ratings ratings;

    @Field("created_at")
    private Date createdAt;

    @Field("updated_at")
    private Date updatedAt;

    @Field("is_active")
    private Boolean isActive;

    public Products(String name, String slug, String description, String brand, String categoryId, String sellerId, Double basePrice, Integer stock, Boolean isActive) {
        this.name = name;
        this.slug = slug;
        this.description = description;
        this.brand = brand;
        this.categoryId = categoryId;
        this.sellerId = sellerId;
        this.basePrice = basePrice;
        this.stock = stock;
        this.isActive = isActive;
        this.createdAt= Date.from(Instant.now());
        this.updatedAt= Date.from(Instant.now());
    }

    // --- Inner Classes ---

    public static class Ratings {
        private Double average;
        private Integer count;

        /**
         * update the average rating by adding a new rating another rating
         * @param rating
         * @return
         */
        public double addRating(double rating) {
            count += 1;
            average = ((average * (count - 1)) + rating) / count;
            return average;
        }

    }

    //Operations

    public void setUpdatedAt(){
        this.updatedAt=Date.from(Instant.now());
    }

    //Getters and Setters

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public String getCategoryId() {
        return categoryId;
    }

    public void setCategoryId(String categoryId) {
        this.categoryId = categoryId;
    }

    public String getSellerId() {
        return sellerId;
    }

    public void setSellerId(String sellerId) {
        this.sellerId = sellerId;
    }

    public List<String> getImages() {
        return images;
    }

    public void setImages(List<String> images) {
        this.images = images;
    }

    public List<String> getTags() {
        return tags;
    }

    public void setTags(List<String> tags) {
        this.tags = tags;
    }

    public Double getBasePrice() {
        return basePrice;
    }

    public void setBasePrice(Double basePrice) {
        this.basePrice = basePrice;
    }

    public Integer getStock() {
        return stock;
    }

    public void setStock(Integer stock) {
        this.stock = stock;
    }

    public FlashSales getFlashSale() {
        return flashSale;
    }

    public void setFlashSale(FlashSales flashSale) {
        this.flashSale = flashSale;
    }

    public Boolean getActive() {
        return isActive;
    }

    public void setActive(Boolean active) {
        isActive = active;
    }
}
